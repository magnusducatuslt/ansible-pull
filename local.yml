---
- hosts: 127.0.0.1
  connection: local
  become: true
  gather_facts: false
  vars:

    # schedule is fed directly to cron
    schedule: '* * * * *'

    # User to run ansible-pull as from cron
    cron_user: root

    # File that ansible will use for logs
    logfile: /Users/magnusducatuslt/spatium/ansible-pull/logs.txt

    # Directory to where repository will be cloned
    workdir: /Users/magnusducatuslt/spatium/ansible-pull

    repo_url: git@github.com:magnusducatuslt/ansible-pull.git
  tasks:
    

    - include_tasks: tasks/cron.yaml
    # - name: Tear down existing services
    #   docker_compose:
    #     project_src: "./"
    #     state: absent # Specifying absent is the same as running docker-compose down.
    #   register: "output"
    #   timeout: 30 

    # - name: Stop all services
    #   docker_compose:
    #     project_src: ./
    #     build: false
    #     stopped: true # Use with state present to stop all containers defined in the Compose file.
    #   register: output 

    - name: After
      shell: "docker ps"
      register: logs2
        
    - debug: var=logs2.stdout_lines

    - name: Handle the error
      block:
      - name: Create and start services
        docker_compose:
          project_src: ./ # Path to a directory containing a docker-compose.yml or docker-compose.yaml file.
          build: true # Use with state present to always build images prior to starting the application.
        register: output
      rescue:
      - name: Print when errors
        debug:
          var: output.stdout_lines

    - debug:
        var: output.stdout_lines